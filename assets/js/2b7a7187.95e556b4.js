"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[38880],{40215:(e,a,c)=>{c.r(a),c.d(a,{Badge:()=>y,Bullet:()=>l,Details:()=>j,SpecifiedBy:()=>h,assets:()=>r,contentTitle:()=>n,default:()=>b,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var t=c(74848),d=c(28453),s=c(96540);const i={id:"activate-physical-card-payload",title:"ActivatePhysicalCardPayload"},n=void 0,o={id:"unions/activate-physical-card-payload",title:"ActivatePhysicalCardPayload",description:"No description",source:"@site/docs/unions/activate-physical-card-payload.mdx",sourceDirName:"unions",slug:"/unions/activate-physical-card-payload",permalink:"/unions/activate-physical-card-payload",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/unions/activate-physical-card-payload.mdx",tags:[],version:"current",frontMatter:{id:"activate-physical-card-payload",title:"ActivatePhysicalCardPayload"},sidebar:"schemaSidebar",previous:{title:"AcceptConsentPayload",permalink:"/unions/accept-consent-payload"},next:{title:"AddAccountMembershipPayload",permalink:"/unions/add-account-membership-payload"}},r={},l=()=>{const e={span:"span",...(0,d.R)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},h=e=>{const a={a:"a",...(0,d.R)()};return(0,t.jsxs)(t.Fragment,{children:["Specification",(0,t.jsx)(a.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},y=e=>{const a={span:"span",...(0,d.R)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(a.span,{className:e.class,children:e.text})})},j=({dataOpen:e,dataClose:a,children:c,startOpen:i=!1})=>{const n={details:"details",summary:"summary",...(0,d.R)()},[o,r]=(0,s.useState)(i);return(0,t.jsxs)(n.details,{...o?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,t.jsx)(n.summary,{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"},children:o?e:a}),o&&c]})},p=[{value:"Possible types",id:"possible-types",level:3},{value:'<code>ActivatePhysicalCardPayload.<b>ActivatePhysicalCardSuccessPayload</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadactivatephysicalcardsuccesspayload-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>BadAccountStatusRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadbadaccountstatusrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>PhysicalCardNotFoundRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadphysicalcardnotfoundrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>PhysicalCardWrongStatusRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadphysicalcardwrongstatusrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>CannotActivatePhysicalCardRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadcannotactivatephysicalcardrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadforbiddenrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>CardNotFoundRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadcardnotfoundrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>UserNotCardHolderRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadusernotcardholderrejection-",level:4},{value:'<code>ActivatePhysicalCardPayload.<b>ValidationRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"activatephysicalcardpayloadvalidationrejection-",level:4},{value:"Returned By",id:"returned-by",level:3}];function u(e){const a={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.p,{children:"No description"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-graphql",children:"union ActivatePhysicalCardPayload = ActivatePhysicalCardSuccessPayload | BadAccountStatusRejection | PhysicalCardNotFoundRejection | PhysicalCardWrongStatusRejection | CannotActivatePhysicalCardRejection | ForbiddenRejection | CardNotFoundRejection | UserNotCardHolderRejection | ValidationRejection\n"})}),"\n",(0,t.jsx)(a.h3,{id:"possible-types",children:"Possible types"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadactivatephysicalcardsuccesspayload-",children:[(0,t.jsx)(a.a,{href:"/objects/activate-physical-card-success-payload",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"ActivatePhysicalCardSuccessPayload"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadbadaccountstatusrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/bad-account-status-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"BadAccountStatusRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned if the status account is not valid"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadphysicalcardnotfoundrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/physical-card-not-found-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"PhysicalCardNotFoundRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned when the Physical Card does not exist"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadphysicalcardwrongstatusrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/physical-card-wrong-status-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"PhysicalCardWrongStatusRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned when the Physical Card is not the expected status"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadcannotactivatephysicalcardrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/cannot-activate-physical-card-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"CannotActivatePhysicalCardRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned when the Physical Card cannot be activated"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadforbiddenrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/forbidden-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"ForbiddenRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadcardnotfoundrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/card-not-found-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"CardNotFoundRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned if the card was not found or if the user does not have the rights to know that the account exists"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadusernotcardholderrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/user-not-card-holder-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"UserNotCardHolderRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned when the User is not the cardholder"}),"\n",(0,t.jsxs)(a.h4,{id:"activatephysicalcardpayloadvalidationrejection-",children:[(0,t.jsx)(a.a,{href:"/objects/validation-rejection",children:(0,t.jsxs)("code",{style:{fontWeight:"normal"},children:["ActivatePhysicalCardPayload.",(0,t.jsx)("b",{children:"ValidationRejection"})]})})," ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,t.jsx)(a.p,{children:"Rejection returned if an input contains invalid data"}),"\n",(0,t.jsx)(a.h3,{id:"returned-by",children:"Returned By"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.a,{href:"/mutations/activate-physical-card",children:(0,t.jsx)(a.code,{children:"activatePhysicalCard"})}),"  ",(0,t.jsx)(y,{class:"badge badge--secondary",text:"mutation"})]})]})}function b(e={}){const{wrapper:a}={...(0,d.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},28453:(e,a,c)=>{c.d(a,{R:()=>i,x:()=>n});var t=c(96540);const d={},s=t.createContext(d);function i(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);