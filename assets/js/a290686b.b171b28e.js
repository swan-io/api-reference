"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[24875],{74238:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>p,Bullet:()=>r,Details:()=>g,SpecifiedBy:()=>u,assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>j});var o=n(74848),c=n(28453),a=n(96540);const d={id:"update-account-settings-payload",title:"UpdateAccountSettingsPayload"},s=void 0,i={id:"unions/update-account-settings-payload",title:"UpdateAccountSettingsPayload",description:"No description",source:"@site/docs/unions/update-account-settings-payload.mdx",sourceDirName:"unions",slug:"/unions/update-account-settings-payload",permalink:"/unions/update-account-settings-payload",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/unions/update-account-settings-payload.mdx",tags:[],version:"current",frontMatter:{id:"update-account-settings-payload",title:"UpdateAccountSettingsPayload"},sidebar:"schemaSidebar",previous:{title:"UpdateAccountPayload",permalink:"/unions/update-account-payload"},next:{title:"UpdateCardPayload",permalink:"/unions/update-card-payload"}},l={},r=()=>{const e={span:"span",...(0,c.R)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},u=e=>{const t={a:"a",...(0,c.R)()};return(0,o.jsxs)(o.Fragment,{children:["Specification",(0,o.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},p=e=>{const t={span:"span",...(0,c.R)()};return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(t.span,{className:e.class,children:e.text})})},g=({dataOpen:e,dataClose:t,children:n,startOpen:d=!1})=>{const s={details:"details",summary:"summary",...(0,c.R)()},[i,l]=(0,a.useState)(d);return(0,o.jsxs)(s.details,{...i?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,o.jsx)(s.summary,{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"},children:i?e:t}),i&&n]})},j=[{value:"Possible types",id:"possible-types",level:3},{value:'<code>UpdateAccountSettingsPayload.<b>UpdateAccountSettingsSuccess</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadupdateaccountsettingssuccess-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>UpdateAccountSettingsConsentPending</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadupdateaccountsettingsconsentpending-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>InternalErrorRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadinternalerrorrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>ForbiddenRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadforbiddenrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>ValidationRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadvalidationrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>AccountNotFoundRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadaccountnotfoundrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>AccountHolderNotFoundRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadaccountholdernotfoundrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>AccountMembershipNotFoundRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadaccountmembershipnotfoundrejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>AccountTypeNotEligibleRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadaccounttypenoteligiblerejection-",level:4},{value:'<code>UpdateAccountSettingsPayload.<b>AccountHolderTypeNotEligibleRejection</b></code> <Badge class="badge badge--secondary"></Badge>',id:"updateaccountsettingspayloadaccountholdertypenoteligiblerejection-",level:4},{value:"Returned By",id:"returned-by",level:3}];function b(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"No description"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-graphql",children:"union UpdateAccountSettingsPayload = UpdateAccountSettingsSuccess | UpdateAccountSettingsConsentPending | InternalErrorRejection | ForbiddenRejection | ValidationRejection | AccountNotFoundRejection | AccountHolderNotFoundRejection | AccountMembershipNotFoundRejection | AccountTypeNotEligibleRejection | AccountHolderTypeNotEligibleRejection\n"})}),"\n",(0,o.jsx)(t.h3,{id:"possible-types",children:"Possible types"}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadupdateaccountsettingssuccess-",children:[(0,o.jsx)(t.a,{href:"/objects/update-account-settings-success",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"UpdateAccountSettingsSuccess"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadupdateaccountsettingsconsentpending-",children:[(0,o.jsx)(t.a,{href:"/objects/update-account-settings-consent-pending",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"UpdateAccountSettingsConsentPending"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadinternalerrorrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/internal-error-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"InternalErrorRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(t.p,{children:"Rejection returned on unexpected server error"}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadforbiddenrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/forbidden-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"ForbiddenRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadvalidationrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/validation-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"ValidationRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(t.p,{children:"Rejection returned if an input contains invalid data"}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadaccountnotfoundrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/account-not-found-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"AccountNotFoundRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(t.p,{children:"Rejection returned if the account was not found or if the user does not have the rights to know that the card exists"}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadaccountholdernotfoundrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/account-holder-not-found-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"AccountHolderNotFoundRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(t.p,{children:"Rejection returned when the Account Holder was not found"}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadaccountmembershipnotfoundrejection-",children:[(0,o.jsx)(t.a,{href:"/objects/account-membership-not-found-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"AccountMembershipNotFoundRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadaccounttypenoteligiblerejection-",children:[(0,o.jsx)(t.a,{href:"/objects/account-type-not-eligible-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"AccountTypeNotEligibleRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsxs)(t.h4,{id:"updateaccountsettingspayloadaccountholdertypenoteligiblerejection-",children:[(0,o.jsx)(t.a,{href:"/objects/account-holder-type-not-eligible-rejection",children:(0,o.jsxs)("code",{style:{fontWeight:"normal"},children:["UpdateAccountSettingsPayload.",(0,o.jsx)("b",{children:"AccountHolderTypeNotEligibleRejection"})]})})," ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,o.jsx)(t.h3,{id:"returned-by",children:"Returned By"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/mutations/update-account-settings",children:(0,o.jsx)(t.code,{children:"updateAccountSettings"})}),"  ",(0,o.jsx)(p,{class:"badge badge--secondary",text:"mutation"})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(b,{...e})}):b(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>s});var o=n(96540);const c={},a=o.createContext(c);function d(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);