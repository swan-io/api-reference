"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[20911],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68253:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>m,Bullet:()=>c,SpecifiedBy:()=>u,assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(83117),r=n(67294),i=n(3905);const o={id:"statement-filters-input",title:"StatementFiltersInput",hide_table_of_contents:!1},l=void 0,s={unversionedId:"inputs/statement-filters-input",id:"inputs/statement-filters-input",title:"StatementFiltersInput",description:"Filter that can be given to give the statement in a specific data range",source:"@site/docs/inputs/statement-filters-input.mdx",sourceDirName:"inputs",slug:"/inputs/statement-filters-input",permalink:"/inputs/statement-filters-input",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/inputs/statement-filters-input.mdx",tags:[],version:"current",frontMatter:{id:"statement-filters-input",title:"StatementFiltersInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"SpendingLimitInput",permalink:"/inputs/spending-limit-input"},next:{title:"SuspendAccountMembershipInput",permalink:"/inputs/suspend-account-membership-input"}},p={},d=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>StatementFiltersInput.<b>isAfterUpdatedAt</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-statementfiltersinputbisafterupdatedatbcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>StatementFiltersInput.<b>isBeforeUpdatedAt</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-statementfiltersinputbisbeforeupdatedatbcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>StatementFiltersInput.<b>period</b></code><Bullet /><code>StatementPeriod</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-statementfiltersinputbperiodbcodestatementperiod-",level:4}],c=()=>(0,i.kt)(r.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,i.kt)(r.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,i.kt)(r.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:d,Bullet:c,SpecifiedBy:u,Badge:m},b="wrapper";function y(e){let{components:t,...n}=e;return(0,i.kt)(b,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Filter that can be given to give the statement in a specific data range"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"input StatementFiltersInput {\n  isAfterUpdatedAt: DateTime\n  isBeforeUpdatedAt: DateTime\n  period: StatementPeriod\n}\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-statementfiltersinputbisafterupdatedatbcodedatetime-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"StatementFiltersInput.",(0,i.kt)("b",null,"isAfterUpdatedAt"))),(0,i.kt)(c,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/scalars/date-time"},(0,i.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,i.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"To filter after an updatedAt value")),(0,i.kt)("h4",{id:"code-style-fontweight-normal-statementfiltersinputbisbeforeupdatedatbcodedatetime-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"StatementFiltersInput.",(0,i.kt)("b",null,"isBeforeUpdatedAt"))),(0,i.kt)(c,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/scalars/date-time"},(0,i.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,i.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"To filter before an updatedAt value")),(0,i.kt)("h4",{id:"code-style-fontweight-normal-statementfiltersinputbperiodbcodestatementperiod-"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"StatementFiltersInput.",(0,i.kt)("b",null,"period"))),(0,i.kt)(c,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/enums/statement-period"},(0,i.kt)("inlineCode",{parentName:"a"},"StatementPeriod"))," ",(0,i.kt)(m,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"To filter on a specific period of statement (either custom or monthly)")))}y.isMDXComponent=!0}}]);