"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[26934],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var o=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=o.createContext({}),l=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,c=e.originalType,i=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=l(n),m=s,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||c;return n?o.createElement(b,a(a({ref:t},u),{},{components:n})):o.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var c=n.length,a=new Array(c);a[0]=m;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r[d]="string"==typeof e?e:s,a[1]=r;for(var l=2;l<c;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},20268:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>m,Bullet:()=>d,SpecifiedBy:()=>p,assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(83117),s=n(67294),c=n(3905);const a={id:"account-membership-consent-pending-status-info",title:"AccountMembershipConsentPendingStatusInfo",hide_table_of_contents:!1},r=void 0,i={unversionedId:"objects/account-membership-consent-pending-status-info",id:"objects/account-membership-consent-pending-status-info",title:"AccountMembershipConsentPendingStatusInfo",description:"when the user has to consent to invite a new account membership",source:"@site/docs/objects/account-membership-consent-pending-status-info.mdx",sourceDirName:"objects",slug:"/objects/account-membership-consent-pending-status-info",permalink:"/objects/account-membership-consent-pending-status-info",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/objects/account-membership-consent-pending-status-info.mdx",tags:[],version:"current",frontMatter:{id:"account-membership-consent-pending-status-info",title:"AccountMembershipConsentPendingStatusInfo",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"AccountMembershipConnection",permalink:"/objects/account-membership-connection"},next:{title:"AccountMembershipDisabledStatusInfo",permalink:"/objects/account-membership-disabled-status-info"}},l={},u=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AccountMembershipConsentPendingStatusInfo.<b>status</b></code><Bullet /><code>AccountMembershipStatus!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobstatusbcodeaccountmembershipstatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AccountMembershipConsentPendingStatusInfo.<b>consent</b></code><Bullet /><code>Consent!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobconsentbcodeconsent--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AccountMembershipConsentPendingStatusInfo.<b>restrictedTo</b></code><Bullet /><code>RestrictedTo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobrestrictedtobcoderestrictedto--",level:4},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>AccountMembershipStatusInfo</code> <Badge class="secondary" text="interface"/>',id:"accountmembershipstatusinfo-",level:4}],d=()=>(0,c.kt)(s.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,c.kt)(s.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,c.kt)(s.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),b={toc:u,Bullet:d,SpecifiedBy:p,Badge:m},f="wrapper";function h(e){let{components:t,...n}=e;return(0,c.kt)(f,(0,o.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"when the user has to consent to invite a new account membership"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"type AccountMembershipConsentPendingStatusInfo implements AccountMembershipStatusInfo {\n  status: AccountMembershipStatus!\n  consent: Consent!\n  restrictedTo: RestrictedTo!\n}\n")),(0,c.kt)("h3",{id:"fields"},"Fields"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobstatusbcodeaccountmembershipstatus--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"AccountMembershipConsentPendingStatusInfo.",(0,c.kt)("b",null,"status"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/enums/account-membership-status"},(0,c.kt)("inlineCode",{parentName:"a"},"AccountMembershipStatus!"))," ",(0,c.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,c.kt)(m,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"AccountMembership status (always ConsentPending for type AccountMembershipConsentPendingStatusInfo)")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobconsentbcodeconsent--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"AccountMembershipConsentPendingStatusInfo.",(0,c.kt)("b",null,"consent"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/objects/consent"},(0,c.kt)("inlineCode",{parentName:"a"},"Consent!"))," ",(0,c.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,c.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"The consent required to invite this account membership")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-accountmembershipconsentpendingstatusinfobrestrictedtobcoderestrictedto--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"AccountMembershipConsentPendingStatusInfo.",(0,c.kt)("b",null,"restrictedTo"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/objects/restricted-to"},(0,c.kt)("inlineCode",{parentName:"a"},"RestrictedTo!"))," ",(0,c.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,c.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"restricted to a user")),(0,c.kt)("h3",{id:"interfaces"},"Interfaces"),(0,c.kt)("h4",{id:"accountmembershipstatusinfo-"},(0,c.kt)("a",{parentName:"h4",href:"/interfaces/account-membership-status-info"},(0,c.kt)("inlineCode",{parentName:"a"},"AccountMembershipStatusInfo"))," ",(0,c.kt)(m,{class:"secondary",text:"interface",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"here are the different account membership status:")))}h.isMDXComponent=!0}}]);