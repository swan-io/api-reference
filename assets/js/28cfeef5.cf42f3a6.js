"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[70275],{43940:(e,n,t)=>{t.r(n),t.d(n,{Badge:()=>h,Bullet:()=>l,Details:()=>f,SpecifiedBy:()=>u,assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>x});var c=t(74848),s=t(28453),a=t(96540);const r={id:"accounts",title:"accounts"},o=void 0,i={id:"queries/accounts",title:"accounts",description:"Returns the list of accounts.",source:"@site/docs/queries/accounts.mdx",sourceDirName:"queries",slug:"/queries/accounts",permalink:"/queries/accounts",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/queries/accounts.mdx",tags:[],version:"current",frontMatter:{id:"accounts",title:"accounts"},sidebar:"schemaSidebar",previous:{title:"account",permalink:"/queries/account"},next:{title:"beneficiaryVerification",permalink:"/queries/beneficiary-verification"}},d={},l=()=>{const e={span:"span",...(0,s.R)()};return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},u=e=>{const n={a:"a",...(0,s.R)()};return(0,c.jsxs)(c.Fragment,{children:["Specification",(0,c.jsx)(n.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},h=e=>{const n={span:"span",...(0,s.R)()};return(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(n.span,{className:e.class,children:e.text})})},f=({dataOpen:e,dataClose:n,children:t,startOpen:r=!1})=>{const o={details:"details",summary:"summary",...(0,s.R)()},[i,d]=(0,a.useState)(r);return(0,c.jsxs)(o.details,{...i?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,c.jsx)(o.summary,{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"},children:i?e:n}),i&&t]})},x=[{value:"Arguments",id:"arguments",level:3},{value:'<code>accounts.<b>first</b></code><Bullet></Bullet><code>Int!</code> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"accountsfirstint--",level:4},{value:'<code>accounts.<b>before</b></code><Bullet></Bullet><code>String</code> <Badge class="badge badge--secondary"></Badge>',id:"accountsbeforestring-",level:4},{value:'<code>accounts.<b>after</b></code><Bullet></Bullet><code>String</code> <Badge class="badge badge--secondary"></Badge>',id:"accountsafterstring-",level:4},{value:'<code>accounts.<b>filters</b></code><Bullet></Bullet><code>AccountFilterInput</code> <Badge class="badge badge--secondary"></Badge>',id:"accountsfiltersaccountfilterinput-",level:4},{value:'<code>accounts.<b>orderBy</b></code><Bullet></Bullet><code>AccountOrderByInput</code> <Badge class="badge badge--secondary"></Badge>',id:"accountsorderbyaccountorderbyinput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>AccountConnection</code> <Badge class="badge badge--secondary"></Badge>',id:"accountconnection-",level:4}];function g(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"Returns the list of accounts."}),"\n",(0,c.jsxs)(n.p,{children:["Implements the Relay Connection interface, used to paginate list of element (",(0,c.jsx)(n.a,{href:"https://docs.swan.io/api/pagination",children:"Learn More"}),")"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.em,{children:"For a Project access token, this is all the accounts of the project and for an User access token, these are the accounts of which the user has an account membership."})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-graphql",children:"accounts(\n  first: Int! = 50\n  before: String\n  after: String\n  filters: AccountFilterInput\n  orderBy: AccountOrderByInput\n): AccountConnection!\n"})}),"\n",(0,c.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,c.jsxs)(n.h4,{id:"accountsfirstint--",children:[(0,c.jsx)(n.a,{href:"#",children:(0,c.jsxs)("code",{style:{fontWeight:"normal"},children:["accounts.",(0,c.jsx)("b",{children:"first"})]})}),(0,c.jsx)(l,{}),(0,c.jsx)(n.a,{href:"/scalars/int",children:(0,c.jsx)(n.code,{children:"Int!"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"non-null"})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,c.jsx)(n.p,{children:"the number of elements to load (maximum: 100)"}),"\n",(0,c.jsxs)(n.h4,{id:"accountsbeforestring-",children:[(0,c.jsx)(n.a,{href:"#",children:(0,c.jsxs)("code",{style:{fontWeight:"normal"},children:["accounts.",(0,c.jsx)("b",{children:"before"})]})}),(0,c.jsx)(l,{}),(0,c.jsx)(n.a,{href:"/scalars/string",children:(0,c.jsx)(n.code,{children:"String"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,c.jsx)(n.p,{children:"the index (a unique reference in string form) from which you will load the preceding elements"}),"\n",(0,c.jsxs)(n.h4,{id:"accountsafterstring-",children:[(0,c.jsx)(n.a,{href:"#",children:(0,c.jsxs)("code",{style:{fontWeight:"normal"},children:["accounts.",(0,c.jsx)("b",{children:"after"})]})}),(0,c.jsx)(l,{}),(0,c.jsx)(n.a,{href:"/scalars/string",children:(0,c.jsx)(n.code,{children:"String"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"scalar"})]}),"\n",(0,c.jsx)(n.p,{children:"the index (a unique reference in string form) from which you will load the following elements"}),"\n",(0,c.jsxs)(n.h4,{id:"accountsfiltersaccountfilterinput-",children:[(0,c.jsx)(n.a,{href:"#",children:(0,c.jsxs)("code",{style:{fontWeight:"normal"},children:["accounts.",(0,c.jsx)("b",{children:"filters"})]})}),(0,c.jsx)(l,{}),(0,c.jsx)(n.a,{href:"/inputs/account-filter-input",children:(0,c.jsx)(n.code,{children:"AccountFilterInput"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,c.jsx)(n.p,{children:"a filtering table you can apply to your list of connections"}),"\n",(0,c.jsxs)(n.h4,{id:"accountsorderbyaccountorderbyinput-",children:[(0,c.jsx)(n.a,{href:"#",children:(0,c.jsxs)("code",{style:{fontWeight:"normal"},children:["accounts.",(0,c.jsx)("b",{children:"orderBy"})]})}),(0,c.jsx)(l,{}),(0,c.jsx)(n.a,{href:"/inputs/account-order-by-input",children:(0,c.jsx)(n.code,{children:"AccountOrderByInput"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"input"})]}),"\n",(0,c.jsx)(n.p,{children:"an order you can apply to your list of connections"}),"\n",(0,c.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,c.jsxs)(n.h4,{id:"accountconnection-",children:[(0,c.jsx)(n.a,{href:"/objects/account-connection",children:(0,c.jsx)(n.code,{children:"AccountConnection"})})," ",(0,c.jsx)(h,{class:"badge badge--secondary",text:"object"})]}),"\n",(0,c.jsxs)(n.p,{children:["Implements the Relay Connection interface, used to paginate list of element (",(0,c.jsx)(n.a,{href:"https://docs.swan.io/api/pagination",children:"Learn More"}),")"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(g,{...e})}):g(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var c=t(96540);const s={},a=c.createContext(s);function r(e){const n=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),c.createElement(a.Provider,{value:n},e.children)}}}]);