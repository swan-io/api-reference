"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[20524],{40751:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>f,Bullet:()=>l,Details:()=>p,SpecifiedBy:()=>u,assets:()=>r,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var a=n(74848),s=n(28453),i=n(96540);const o={id:"not-started-identification-level-status-info",title:"NotStartedIdentificationLevelStatusInfo"},d=void 0,c={id:"objects/not-started-identification-level-status-info",title:"NotStartedIdentificationLevelStatusInfo",description:"@deprecated Use 'StartedIdentificationLevelStatusInfo' instead. Deprecated to ensure consistency and clear identification status behavior",source:"@site/docs/objects/not-started-identification-level-status-info.mdx",sourceDirName:"objects",slug:"/objects/not-started-identification-level-status-info",permalink:"/objects/not-started-identification-level-status-info",draft:!1,unlisted:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/objects/not-started-identification-level-status-info.mdx",tags:[],version:"current",frontMatter:{id:"not-started-identification-level-status-info",title:"NotStartedIdentificationLevelStatusInfo"},sidebar:"schemaSidebar",previous:{title:"NotReachableConsentStatusRejection",permalink:"/objects/not-reachable-consent-status-rejection"},next:{title:"NotSupportedCountryRejection",permalink:"/objects/not-supported-country-rejection"}},r={},l=()=>{const e={span:"span",...(0,s.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},u=e=>{const t={a:"a",...(0,s.R)()};return(0,a.jsxs)(a.Fragment,{children:["Specification",(0,a.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},f=e=>{const t={span:"span",...(0,s.R)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(t.span,{className:e.class,children:e.text})})},p=({dataOpen:e,dataClose:t,children:n,startOpen:o=!1})=>{const d={details:"details",summary:"summary",...(0,s.R)()},[c,r]=(0,i.useState)(o);return(0,a.jsxs)(d.details,{...c?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,a.jsx)(d.summary,{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"},children:c?e:t}),c&&n]})},h=[{value:"Fields",id:"fields",level:3},{value:'<code>NotStartedIdentificationLevelStatusInfo.<b>status</b></code><Bullet></Bullet><code>SwanIdentificationStatus!</code> <Badge class="badge badge--deprecated badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge> <Badge class="badge badge--secondary"></Badge>',id:"notstartedidentificationlevelstatusinfostatusswanidentificationstatus---",level:4},{value:"Implemented By",id:"implemented-by",level:3}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"@deprecated Use 'StartedIdentificationLevelStatusInfo' instead. Deprecated to ensure consistency and clear identification status behavior\nDescribes an identification level that hasn't started for the process of the current identification"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"type NotStartedIdentificationLevelStatusInfo {\n  status: SwanIdentificationStatus! @deprecated\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"fields",children:"Fields"}),"\n",(0,a.jsxs)(t.h4,{id:"notstartedidentificationlevelstatusinfostatusswanidentificationstatus---",children:[(0,a.jsx)(t.a,{href:"#",children:(0,a.jsxs)("code",{style:{fontWeight:"normal"},children:["NotStartedIdentificationLevelStatusInfo.",(0,a.jsx)("b",{children:"status"})]})}),(0,a.jsx)(l,{}),(0,a.jsx)(t.a,{href:"/enums/swan-identification-status",children:(0,a.jsx)(t.code,{children:"SwanIdentificationStatus!"})})," ",(0,a.jsx)(f,{class:"badge badge--deprecated badge--secondary",text:"deprecated"})," ",(0,a.jsx)(f,{class:"badge badge--secondary",text:"non-null"})," ",(0,a.jsx)(f,{class:"badge badge--secondary",text:"enum"})]}),"\n",(0,a.jsx)(t.admonition,{title:"DEPRECATED",type:"warning",children:(0,a.jsx)(t.p,{children:"Use 'Started' instead. Deprecated to ensure consistency and clear identification status behavior."})}),"\n",(0,a.jsxs)(t.p,{children:["Always set to ",(0,a.jsx)(t.code,{children:"NotStarted"})]}),"\n",(0,a.jsx)(t.h3,{id:"implemented-by",children:"Implemented By"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/unions/identification-level-status-info",children:(0,a.jsx)(t.code,{children:"IdentificationLevelStatusInfo"})}),"  ",(0,a.jsx)(f,{class:"badge badge--secondary",text:"union"})]})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var a=n(96540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);