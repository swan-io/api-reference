"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[88185],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},i=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=d(n),f=r,h=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return n?o.createElement(h,c(c({ref:t},i),{},{components:n})):o.createElement(h,c({ref:t},i))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,c[1]=l;for(var d=2;d<a;d++)c[d]=n[d];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},95526:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>f,Bullet:()=>u,SpecifiedBy:()=>p,assets:()=>d,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>s,toc:()=>i});var o=n(83117),r=n(67294),a=n(3905);const c={id:"account-holders",title:"accountHolders",hide_table_of_contents:!1},l=void 0,s={unversionedId:"queries/account-holders",id:"queries/account-holders",title:"accountHolders",description:"Returns the list of account holders.",source:"@site/docs/queries/account-holders.mdx",sourceDirName:"queries",slug:"/queries/account-holders",permalink:"/queries/account-holders",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/queries/account-holders.mdx",tags:[],version:"current",frontMatter:{id:"account-holders",title:"accountHolders",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"accountHolder",permalink:"/queries/account-holder"},next:{title:"accountInvoice",permalink:"/queries/account-invoice"}},d={},i=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>accountHolders.<b>first</b></code><Bullet /><code>Int!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-accountholdersbfirstbcodeint--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>accountHolders.<b>before</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-accountholdersbbeforebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>accountHolders.<b>filters</b></code><Bullet /><code>AccountHolderFilterInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-accountholdersbfiltersbcodeaccountholderfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>accountHolders.<b>orderBy</b></code><Bullet /><code>AccountHolderOrderByInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-accountholdersborderbybcodeaccountholderorderbyinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>accountHolders.<b>after</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-accountholdersbafterbcodestring-",level:4},{value:"Type",id:"type",level:3},{value:'<code>AccountHolderConnection</code> <Badge class="secondary" text="object"/>',id:"accountholderconnection-",level:4}],u=()=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,a.kt)(r.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{className:"badge badge--"+e.class},e.text)),h={toc:i,Bullet:u,SpecifiedBy:p,Badge:f},m="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Returns the list of account holders."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"For a Project access token, this is all the account holders of the project and for an User access token, these are the holders of the accounts of which the user has an account membership.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"accountHolders(\n  first: Int! = 50\n  before: String\n  filters: AccountHolderFilterInput\n  orderBy: AccountHolderOrderByInput\n  after: String\n): AccountHolderConnection!\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-accountholdersbfirstbcodeint--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"accountHolders.",(0,a.kt)("b",null,"first"))),(0,a.kt)(u,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/scalars/int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int!"))," ",(0,a.kt)(f,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,a.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-accountholdersbbeforebcodestring-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"accountHolders.",(0,a.kt)("b",null,"before"))),(0,a.kt)(u,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,a.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-accountholdersbfiltersbcodeaccountholderfilterinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"accountHolders.",(0,a.kt)("b",null,"filters"))),(0,a.kt)(u,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/inputs/account-holder-filter-input"},(0,a.kt)("inlineCode",{parentName:"a"},"AccountHolderFilterInput"))," ",(0,a.kt)(f,{class:"secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-accountholdersborderbybcodeaccountholderorderbyinput-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"accountHolders.",(0,a.kt)("b",null,"orderBy"))),(0,a.kt)(u,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/inputs/account-holder-order-by-input"},(0,a.kt)("inlineCode",{parentName:"a"},"AccountHolderOrderByInput"))," ",(0,a.kt)(f,{class:"secondary",text:"input",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h4",{id:"code-style-fontweight-normal-accountholdersbafterbcodestring-"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"accountHolders.",(0,a.kt)("b",null,"after"))),(0,a.kt)(u,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,a.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"accountholderconnection-"},(0,a.kt)("a",{parentName:"h4",href:"/objects/account-holder-connection"},(0,a.kt)("inlineCode",{parentName:"a"},"AccountHolderConnection"))," ",(0,a.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Implements the Relay Connection interface, used to paginate list of element (",(0,a.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/pagination"},"Learn More"),").")))}y.isMDXComponent=!0}}]);