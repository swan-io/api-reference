"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[44697],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function d(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?d(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},d=Object.keys(e);for(n=0;n<d.length;n++)a=d[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(n=0;n<d.length;n++)a=d[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,d=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(a),g=r,m=s["".concat(l,".").concat(g)]||s[g]||p[g]||d;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var d=a.length,i=new Array(d);i[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<d;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},59162:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>g,Bullet:()=>s,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=a(83117),r=a(67294),d=a(3905);const i={id:"add-digital-card",title:"addDigitalCard",hide_table_of_contents:!1},o=void 0,l={unversionedId:"mutations/add-digital-card",id:"mutations/add-digital-card",title:"addDigitalCard",description:"Add a Digital Card to push to ApplePay or GooglePay",source:"@site/docs/mutations/add-digital-card.mdx",sourceDirName:"mutations",slug:"/mutations/add-digital-card",permalink:"/mutations/add-digital-card",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/mutations/add-digital-card.mdx",tags:[],version:"current",frontMatter:{id:"add-digital-card",title:"addDigitalCard",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"addCards",permalink:"/mutations/add-cards"},next:{title:"addDirectDebitFundingSource",permalink:"/mutations/add-direct-debit-funding-source"}},c={},u=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>addDigitalCard.<b>input</b></code><Bullet /><code>AddDigitalCardInput</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-adddigitalcardbinputbcodeadddigitalcardinput-",level:4},{value:"Type",id:"type",level:3},{value:'<code>AddDigitalCardPayload</code> <Badge class="secondary" text="union"/>',id:"adddigitalcardpayload-",level:4}],s=()=>(0,d.kt)(r.Fragment,null,(0,d.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,d.kt)(r.Fragment,null,"Specification",(0,d.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),g=e=>(0,d.kt)(r.Fragment,null,(0,d.kt)("span",{className:"badge badge--"+e.class},e.text)),m={toc:u,Bullet:s,SpecifiedBy:p,Badge:g},f="wrapper";function y(e){let{components:t,...a}=e;return(0,d.kt)(f,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"Add a Digital Card to push to ApplePay or GooglePay"),(0,d.kt)("p",null,"This mutation is restricted to an User access token (",(0,d.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/authentication"},"Learn More"),") and ask the user to consent to this request."),(0,d.kt)("p",null,"The user must be the card holder"),(0,d.kt)("p",null,"A digital card will only be valid for 1 hour after consent validation"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-graphql"},"addDigitalCard(\n  input: AddDigitalCardInput\n): AddDigitalCardPayload!\n")),(0,d.kt)("h3",{id:"arguments"},"Arguments"),(0,d.kt)("h4",{id:"code-style-fontweight-normal-adddigitalcardbinputbcodeadddigitalcardinput-"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"addDigitalCard.",(0,d.kt)("b",null,"input"))),(0,d.kt)(s,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/inputs/add-digital-card-input"},(0,d.kt)("inlineCode",{parentName:"a"},"AddDigitalCardInput"))," ",(0,d.kt)(g,{class:"secondary",text:"input",mdxType:"Badge"})),(0,d.kt)("blockquote",null),(0,d.kt)("h3",{id:"type"},"Type"),(0,d.kt)("h4",{id:"adddigitalcardpayload-"},(0,d.kt)("a",{parentName:"h4",href:"/unions/add-digital-card-payload"},(0,d.kt)("inlineCode",{parentName:"a"},"AddDigitalCardPayload"))," ",(0,d.kt)(g,{class:"secondary",text:"union",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"Payload returned on mutation completion")))}y.isMDXComponent=!0}}]);