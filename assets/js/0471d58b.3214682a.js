"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[21250],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),f=c(n),p=r,m=f["".concat(l,".").concat(p)]||f[p]||u[p]||o;return n?i.createElement(m,a(a({ref:t},s),{},{components:n})):i.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=p;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[f]="string"==typeof e?e:r,a[1]=d;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},60013:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>p,Bullet:()=>f,SpecifiedBy:()=>u,assets:()=>c,contentTitle:()=>d,default:()=>b,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(83117),r=n(67294),o=n(3905);const a={id:"identifications-order-by-field",title:"IdentificationsOrderByField",hide_table_of_contents:!1},d=void 0,l={unversionedId:"enums/identifications-order-by-field",id:"enums/identifications-order-by-field",title:"IdentificationsOrderByField",description:"Fields we can use when ordering that can be applied when listing identifications",source:"@site/docs/enums/identifications-order-by-field.mdx",sourceDirName:"enums",slug:"/enums/identifications-order-by-field",permalink:"/enums/identifications-order-by-field",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/enums/identifications-order-by-field.mdx",tags:[],version:"current",frontMatter:{id:"identifications-order-by-field",title:"IdentificationsOrderByField",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"IdentificationStatus",permalink:"/enums/identification-status"},next:{title:"IdentityDocumentType",permalink:"/enums/identity-document-type"}},c={},s=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>IdentificationsOrderByField.<b>createdAt</b></code>",id:"code-style-fontweight-normal-identificationsorderbyfieldbcreatedatbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>IdentificationsOrderByField.<b>updatedAt</b></code>",id:"code-style-fontweight-normal-identificationsorderbyfieldbupdatedatbcode",level:4},{value:"Member of",id:"member-of",level:3}],f=()=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,o.kt)(r.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,o.kt)(r.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),m={toc:s,Bullet:f,SpecifiedBy:u,Badge:p},y="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(y,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Fields we can use when ordering that can be applied when listing identifications"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum IdentificationsOrderByField {\n  createdAt\n  updatedAt\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-identificationsorderbyfieldbcreatedatbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"IdentificationsOrderByField.",(0,o.kt)("b",null,"createdAt")))),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-identificationsorderbyfieldbupdatedatbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"IdentificationsOrderByField.",(0,o.kt)("b",null,"updatedAt")))),(0,o.kt)("blockquote",null),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/inputs/identifications-order-by-input"},(0,o.kt)("inlineCode",{parentName:"a"},"IdentificationsOrderByInput")),"  ",(0,o.kt)(p,{class:"secondary",text:"input",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);