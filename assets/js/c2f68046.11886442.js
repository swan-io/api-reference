"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[59989],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,y=m["".concat(o,".").concat(u)]||m[u]||d[u]||l;return n?a.createElement(y,s(s({ref:t},c),{},{components:n})):a.createElement(y,s({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},70446:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>u,Bullet:()=>m,SpecifiedBy:()=>d,assets:()=>p,contentTitle:()=>i,default:()=>b,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(83117),r=n(67294),l=n(3905);const s={id:"payment-mandate-filters-input",title:"PaymentMandateFiltersInput",hide_table_of_contents:!1},i=void 0,o={unversionedId:"inputs/payment-mandate-filters-input",id:"inputs/payment-mandate-filters-input",title:"PaymentMandateFiltersInput",description:"Filter that can be passed to get the payment mandate in a specific data range",source:"@site/docs/inputs/payment-mandate-filters-input.mdx",sourceDirName:"inputs",slug:"/inputs/payment-mandate-filters-input",permalink:"/inputs/payment-mandate-filters-input",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/inputs/payment-mandate-filters-input.mdx",tags:[],version:"current",frontMatter:{id:"payment-mandate-filters-input",title:"PaymentMandateFiltersInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"PaymentFiltersInput",permalink:"/inputs/payment-filters-input"},next:{title:"PaymentMandateOrderByInput",permalink:"/inputs/payment-mandate-order-by-input"}},p={},c=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>PaymentMandateFiltersInput.<b>status</b></code><Bullet /><code>[PaymentMandateStatus!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-paymentmandatefiltersinputbstatusbcodepaymentmandatestatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PaymentMandateFiltersInput.<b>scheme</b></code><Bullet /><code>[PaymentMandateScheme!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-paymentmandatefiltersinputbschemebcodepaymentmandatescheme--",level:4}],m=()=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,l.kt)(r.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,l.kt)(r.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:c,Bullet:m,SpecifiedBy:d,Badge:u},f="wrapper";function b(e){let{components:t,...n}=e;return(0,l.kt)(f,(0,a.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Filter that can be passed to get the payment mandate in a specific data range"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input PaymentMandateFiltersInput {\n  status: [PaymentMandateStatus!]\n  scheme: [PaymentMandateScheme!]\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-paymentmandatefiltersinputbstatusbcodepaymentmandatestatus--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"PaymentMandateFiltersInput.",(0,l.kt)("b",null,"status"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/enums/payment-mandate-status"},(0,l.kt)("inlineCode",{parentName:"a"},"[PaymentMandateStatus!]"))," ",(0,l.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"To filter on status values")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-paymentmandatefiltersinputbschemebcodepaymentmandatescheme--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"PaymentMandateFiltersInput.",(0,l.kt)("b",null,"scheme"))),(0,l.kt)(m,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/enums/payment-mandate-scheme"},(0,l.kt)("inlineCode",{parentName:"a"},"[PaymentMandateScheme!]"))," ",(0,l.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"To filter on scheme values")))}b.isMDXComponent=!0}}]);