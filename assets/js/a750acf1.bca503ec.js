"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[75276],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>p});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),m=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},i="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),i=m(a),y=o,p=i["".concat(c,".").concat(y)]||i[y]||h[y]||r;return a?n.createElement(p,d(d({ref:t},s),{},{components:a})):n.createElement(p,d({ref:t},s))}));function p(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,d=new Array(r);d[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[i]="string"==typeof e?e:o,d[1]=l;for(var m=2;m<r;m++)d[m]=a[m];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},7739:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>y,Bullet:()=>i,SpecifiedBy:()=>h,assets:()=>m,contentTitle:()=>l,default:()=>f,frontMatter:()=>d,metadata:()=>c,toc:()=>s});var n=a(83117),o=a(67294),r=a(3905);const d={id:"card-merchant-payment-method",title:"CardMerchantPaymentMethod",hide_table_of_contents:!1},l=void 0,c={unversionedId:"objects/card-merchant-payment-method",id:"objects/card-merchant-payment-method",title:"CardMerchantPaymentMethod",description:"COMING SOON",source:"@site/docs/objects/card-merchant-payment-method.mdx",sourceDirName:"objects",slug:"/objects/card-merchant-payment-method",permalink:"/objects/card-merchant-payment-method",draft:!1,editUrl:"https://github.com/swan-io/api-reference/edit/main/docs/docs/objects/card-merchant-payment-method.mdx",tags:[],version:"current",frontMatter:{id:"card-merchant-payment-method",title:"CardMerchantPaymentMethod",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"CardEnabledStatusInfo",permalink:"/objects/card-enabled-status-info"},next:{title:"CardNotFoundRejection",permalink:"/objects/card-not-found-rejection"}},m={},s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>id</b></code><Bullet /><code>ID!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbidbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>type</b></code><Bullet /><code>MerchantPaymentMethodType!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbtypebcodemerchantpaymentmethodtype--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>methodId</b></code><Bullet /><code>ID!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbmethodidbcodeid--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>statusInfo</b></code><Bullet /><code>MerchantPaymentMethodStatusInfo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="interface"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbstatusinfobcodemerchantpaymentmethodstatusinfo--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>version</b></code><Bullet /><code>Int!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbversionbcodeint--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>updatedAt</b></code><Bullet /><code>Date!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbupdatedatbcodedate--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardMerchantPaymentMethod.<b>rollingReserve</b></code><Bullet /><code>RollingReserve</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-cardmerchantpaymentmethodbrollingreservebcoderollingreserve-",level:4},{value:"Interfaces",id:"interfaces",level:3},{value:'<code>MerchantPaymentMethod</code> <Badge class="secondary" text="interface"/>',id:"merchantpaymentmethod-",level:4}],i=()=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),h=e=>(0,r.kt)(o.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),p={toc:s,Bullet:i,SpecifiedBy:h,Badge:y},u="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"COMING SOON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type CardMerchantPaymentMethod implements MerchantPaymentMethod {\n  id: ID!\n  type: MerchantPaymentMethodType!\n  methodId: ID!\n  statusInfo: MerchantPaymentMethodStatusInfo!\n  version: Int!\n  updatedAt: Date!\n  rollingReserve: RollingReserve\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbidbcodeid--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"id"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Unique identifier tied to every version of a given Merchant Payment Method")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbtypebcodemerchantpaymentmethodtype--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"type"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/enums/merchant-payment-method-type"},(0,r.kt)("inlineCode",{parentName:"a"},"MerchantPaymentMethodType!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The Merchant Payment Method Type")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbmethodidbcodeid--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"methodId"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/scalars/id"},(0,r.kt)("inlineCode",{parentName:"a"},"ID!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Unique identifier for a given merchant Payment Method, identical for every version of a given Merchant Payment Method Type")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbstatusinfobcodemerchantpaymentmethodstatusinfo--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"statusInfo"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/interfaces/merchant-payment-method-status-info"},(0,r.kt)("inlineCode",{parentName:"a"},"MerchantPaymentMethodStatusInfo!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"interface",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Status of the Merchant Payment Method")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbversionbcodeint--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"version"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/scalars/int"},(0,r.kt)("inlineCode",{parentName:"a"},"Int!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Version of the Merchant Payment Method")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbupdatedatbcodedate--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"updatedAt"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/scalars/date"},(0,r.kt)("inlineCode",{parentName:"a"},"Date!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Date at which the Merchant Payment Method was last updated")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-cardmerchantpaymentmethodbrollingreservebcoderollingreserve-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"CardMerchantPaymentMethod.",(0,r.kt)("b",null,"rollingReserve"))),(0,r.kt)(i,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/objects/rolling-reserve"},(0,r.kt)("inlineCode",{parentName:"a"},"RollingReserve"))," ",(0,r.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Rolling Reserve applied to the Merchant Payment Method")),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("h4",{id:"merchantpaymentmethod-"},(0,r.kt)("a",{parentName:"h4",href:"/interfaces/merchant-payment-method"},(0,r.kt)("inlineCode",{parentName:"a"},"MerchantPaymentMethod"))," ",(0,r.kt)(y,{class:"secondary",text:"interface",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Base object for the different Payment Methods available")))}f.isMDXComponent=!0}}]);